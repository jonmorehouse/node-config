// Generated by CoffeeScript 1.6.3
(function() {
  var async, cson, h, jsonLoader, load, merge, path, yaml, yamlLoader,
    __slice = [].slice;

  path = require('path');

  cson = require('coffeeson');

  yaml = require('js-yaml');

  merge = require("./merge");

  h = require("./helpers");

  async = require('async');

  yamlLoader = function(filepath, cb) {
    var err, obj;
    try {
      obj = yaml.safeLoad(filepath);
    } catch (_error) {
      err = _error;
      return cb(err);
    }
    return cb(null, obj);
  };

  jsonLoader = function(filepath, cb) {
    var err, obj;
    try {
      obj = require(filepath);
    } catch (_error) {
      err = _error;
      return cb(err);
    }
    return cb(null, obj);
  };

  load = function() {
    var args, cb, opts, _, _ref;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    _ref = h.argParser(args, {}), opts = _ref[0], cb = _ref[1];
    return typeof cb === "function" ? cb() : void 0;
    _ = function(filepath, cb) {
      var loader;
      switch (path.extname(filepath)) {
        case ".json":
          loader = jsonLoader;
          break;
        case ".cson":
          loader = cson;
          break;
        case ".yml":
        case ".yaml":
          loader = ymlLoader;
          break;
        default:
          return cb(new Error("Unrecognized file type"));
      }
      return loader(filepath, function(err, obj) {
        if (err) {
          return cb(err);
        }
        merge(obj, opts);
        return cb(null, obj);
      });
    };
    return async.each(filepaths);
  };

  module.exports = {
    load: load
  };

}).call(this);

// Generated by CoffeeScript 1.6.3
(function() {
  var getEnv, h, loadEnv, setCamelCase, setEnv, setObject,
    _this = this;

  h = require("./helpers");

  getEnv = function(key, defaultValue) {
    if (!(key in process.env)) {
      return defaultValue;
    }
    return h.normalizeValue(process.env[key]);
  };

  setObject = function(key) {
    return h.setObject(key, getEnv(key), config, "_");
  };

  setCamelCase = function(key) {
    var err, objKey;
    objKey = h.camelCase(key);
    if (process.env[key] != null) {
      config[objKey] = getEnv(key);
      return config[key] = getEnv(key);
    } else {
      err = new Error("Invalid key");
      if (typeof cb !== "undefined" && cb !== null) {
        return typeof cb === "function" ? cb(err) : void 0;
      }
      throw err;
    }
  };

  setEnv = function(key, defaultValue) {
    return config[key] = getEnv(key);
  };

  loadEnv = function(keys, cb) {
    var key, _fn, _i, _len,
      _this = this;
    if (!typeof keys === 'array') {
      keys = [keys];
    }
    _fn = function(key) {
      setCamelCase(key);
      setObject(key);
      return setEnv(key);
    };
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      _fn(key);
    }
    return typeof cb === "function" ? cb() : void 0;
  };

  module.exports = {
    loadEnv: loadEnv,
    getEnv: getEnv
  };

}).call(this);

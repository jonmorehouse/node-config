// Generated by CoffeeScript 1.6.3
(function() {
  var camelcase;

  camelcase = function(key) {
    var normalize, piece, pieces;
    normalize = function(input) {
      return input[0].toUpperCase() + input.slice(1, input.length).toLowerCase();
    };
    pieces = key.split("_");
    if (pieces.length > 1) {
      return [
        pieces[0].toLowerCase() + ((function() {
          var _i, _len, _ref, _results;
          _ref = pieces.slice(1, +pieces.length + 1 || 9e9);
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            piece = _ref[_i];
            _results.push(normalize(piece));
          }
          return _results;
        })())
      ].join("");
    } else {
      return pieces[0].toLowerCase();
    }
  };

  module.exports = function(keys, cb) {
    var envSetter, key, _i, _len;
    envSetter = function(key) {
      var err, objKey;
      objKey = camelcase(key);
      if (process.env[key] != null) {
        config[objKey] = process.env[key];
        return config[key] = process.env[key];
      } else {
        err = new Error("Invalid key");
        if (cb != null) {
          return typeof cb === "function" ? cb(err) : void 0;
        }
        throw err;
      }
    };
    if (!typeof keys === 'array') {
      keys = [keys];
    }
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      key = keys[_i];
      envSetter(key);
    }
    return typeof cb === "function" ? cb() : void 0;
  };

}).call(this);
